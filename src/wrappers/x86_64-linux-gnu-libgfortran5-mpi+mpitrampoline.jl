# Autogenerated wrapper script for TDEP_jll for x86_64-linux-gnu-libgfortran5-mpi+mpitrampoline
export anharmonic_free_energy, atomic_distribution, canonical_configuration, crystal_structure_info, dump_dynamical_matrices, extract_forceconstants, generate_structure, libolle, lineshape, pack_simulation, phonon_dispersion_relations, refine_structure, samples_from_md, thermal_conductivity, thermal_conductivity_2023

using HDF5_jll
using FFTW_jll
using OpenBLAS32_jll
using CompilerSupportLibraries_jll
using MPItrampoline_jll
JLLWrappers.@generate_wrapper_header("TDEP")
JLLWrappers.@declare_library_product(libolle, "libolle.so")
JLLWrappers.@declare_executable_product(anharmonic_free_energy)
JLLWrappers.@declare_executable_product(atomic_distribution)
JLLWrappers.@declare_executable_product(canonical_configuration)
JLLWrappers.@declare_executable_product(crystal_structure_info)
JLLWrappers.@declare_executable_product(dump_dynamical_matrices)
JLLWrappers.@declare_executable_product(extract_forceconstants)
JLLWrappers.@declare_executable_product(generate_structure)
JLLWrappers.@declare_executable_product(lineshape)
JLLWrappers.@declare_executable_product(pack_simulation)
JLLWrappers.@declare_executable_product(phonon_dispersion_relations)
JLLWrappers.@declare_executable_product(refine_structure)
JLLWrappers.@declare_executable_product(samples_from_md)
JLLWrappers.@declare_executable_product(thermal_conductivity)
JLLWrappers.@declare_executable_product(thermal_conductivity_2023)
function __init__()
    JLLWrappers.@generate_init_header(HDF5_jll, FFTW_jll, OpenBLAS32_jll, CompilerSupportLibraries_jll, MPItrampoline_jll, MPIPreferences)
    JLLWrappers.@init_library_product(
        libolle,
        "lib/libolle.so",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_executable_product(
        anharmonic_free_energy,
        "bin/anharmonic_free_energy",
    )

    JLLWrappers.@init_executable_product(
        atomic_distribution,
        "bin/atomic_distribution",
    )

    JLLWrappers.@init_executable_product(
        canonical_configuration,
        "bin/canonical_configuration",
    )

    JLLWrappers.@init_executable_product(
        crystal_structure_info,
        "bin/crystal_structure_info",
    )

    JLLWrappers.@init_executable_product(
        dump_dynamical_matrices,
        "bin/dump_dynamical_matrices",
    )

    JLLWrappers.@init_executable_product(
        extract_forceconstants,
        "bin/extract_forceconstants",
    )

    JLLWrappers.@init_executable_product(
        generate_structure,
        "bin/generate_structure",
    )

    JLLWrappers.@init_executable_product(
        lineshape,
        "bin/lineshape",
    )

    JLLWrappers.@init_executable_product(
        pack_simulation,
        "bin/pack_simulation",
    )

    JLLWrappers.@init_executable_product(
        phonon_dispersion_relations,
        "bin/phonon_dispersion_relations",
    )

    JLLWrappers.@init_executable_product(
        refine_structure,
        "bin/refine_structure",
    )

    JLLWrappers.@init_executable_product(
        samples_from_md,
        "bin/samples_from_md",
    )

    JLLWrappers.@init_executable_product(
        thermal_conductivity,
        "bin/thermal_conductivity",
    )

    JLLWrappers.@init_executable_product(
        thermal_conductivity_2023,
        "bin/thermal_conductivity_2023",
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
